<?php
require_once $_SERVER["DOCUMENT_ROOT"]."/_code/includes/_config.php";
require_once $_SERVER["DOCUMENT_ROOT"]."/_code/includes/_conexion.php";
require_once $_SERVER["DOCUMENT_ROOT"]."/_code/modelos/Persona.php";
//echo __FILE__."<br/>";
class Apoderado extends Persona{
    private $telefono_fijo;
    private $telefono_celular;
    private $estado = "1";

    public function set_telefono_celular($telefono_celular)
    {
        $this->telefono_celular = $telefono_celular;
    }
    public function get_telefono_celular()
    {
        return $this->telefono_celular;
    }
    public function set_telefono_fijo($telefono_fijo)
    {
        $this->telefono_fijo = $telefono_fijo;
    }
    public function get_telefono_fijo()
    {
        return $this->telefono_fijo;
    }

    public function validar_telefono_fijo(){
        global $v;
        if(!$v->validar_formato_numero($this->telefono_fijo,0,9)){
            //echo ERRORCITO.CLASE_APODERADO." TELEFONO FIJO MUY CORTO O MUY LARGO O CONTIENE CARACTERES NO PERMITIDOS<br/>";
            $this->telefono_fijo = null;
            return false;
        }
        //echo INFO.CLASE_APODERADO." TELEFONO FIJO INGRESADO CORRECTAMENTE<br/>";
        return true;
    }
    public function validar_telefono_celular(){
        global $v;
        if(!$v->validar_formato_numero($this->telefono_celular,8,9)){
            //echo ERRORCITO.CLASE_APODERADO." TELEFONO CELULAR MUY CORTO O MUY LARGO O CONTIENE CARACTERES NO PERMITIDOS<br/>";
            $this->telefono_celular = null;
            return false;
        }
        //echo INFO.CLASE_APODERADO." TELEFONO CELULAR INGRESADO CORRECTAMENTE<br/>";
        return true;
    }
    public function validar(){
        $result = true;
        if(!parent::validar_identidad()){
            $result = false;
        }
        if(!$this->validar_telefono_fijo()){
            $result = false;
        }
        if(!$this->validar_telefono_celular()){
            $result = false;
        }

        return $result;
    }

    public function set_identidad($run, $nombre1, $nombre2, $apellido1, $apellido2, $sexo, $email)
    {
        parent::set_identidad($run, $nombre1, $nombre2, $apellido1, $apellido2, $sexo, $email); // TODO: Change the autogenerated stub
    }

    public function to_matriz()
    {
        $matriz = parent::to_matriz();
        $matriz["telefono_fijo"] = $this->get_telefono_fijo();
        $matriz["telefono_celular"] = $this->get_telefono_celular();

        return  $matriz;
    }

    public function to_json(){
        $json = json_encode($this->to_matriz(), JSON_UNESCAPED_UNICODE);
        return $json;
    }

    public function db_get_apoderado_by_run(){
        $run_apoderado = $this->get_run();
        global $myPDO;
        $sentencia = $myPDO->prepare("CALL get_apoderado_by_run(?)");
        $sentencia->bindParam(1, $run_apoderado, \PDO::PARAM_STR, 9);
        $sentencia->execute();

        $data = $sentencia->fetchAll(0);
        foreach($data as $row){
            $this->set_identidad(
                $row["run_apoderado"],
                $row["nombre1"],
                $row["nombre2"],
                $row["apellido1"],
                $row["apellido2"],
                $row["sexo"],
                $row["email"]
            );
            $this->set_id_direccion($row["id_direccion"]);
            $this->set_avatar($row["avatar"]);
            $this->set_telefono_fijo($row["telefono_fijo"]);
            $this->set_telefono_celular($row["telefono_celular"]);
        }

        return $sentencia->rowCount();
    }

    public function db_con_apoderado_by_run(){
        $run_apoderado = $this->get_run();
        global $myPDO;
        $sentencia = $myPDO->prepare("CALL get_apoderado_by_run(?)");
        $sentencia->bindParam(1, $run_apoderado, \PDO::PARAM_STR, 9);
        $sentencia->execute();

        return $sentencia->rowCount();
    }

    public function db_upd_apoderado_by_run(){
        $run_apoderado = $this->get_run();
        $nombre1 = $this->get_nombre1();
        $nombre2 = $this->get_nombre2();
        $apellido1 = $this->get_apellido1();
        $apellido2 = $this->get_apellido2();
        $sexo = $this->get_sexo();
        $email = $this->get_email();

        global $myPDO;
        $sentencia = $myPDO->prepare("CALL upd_apoderado_by_run(?,?,?,?,?,?,?,?,?)");
        $sentencia->bindParam(1, $run_apoderado, \PDO::PARAM_STR, 9);
        $sentencia->bindParam(2, $nombre1, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(3, $nombre2, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(4, $apellido1, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(5, $apellido2, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(6, $sexo, \PDO::PARAM_STR, 1);
        $sentencia->bindParam(7, $this->telefono_fijo, \PDO::PARAM_INT);
        $sentencia->bindParam(8, $this->telefono_celular, \PDO::PARAM_INT);
        $sentencia->bindParam(9, $email, \PDO::PARAM_STR, 100);
        $result = $sentencia->execute();

        return $result;
    }

    public function db_ins_apoderado(){
        $run_apoderado = $this->get_run();
        $nombre1 = $this->get_nombre1();
        $nombre2 = $this->get_nombre2();
        $apellido1 = $this->get_apellido1();
        $apellido2 = $this->get_apellido2();
        $sexo = $this->get_sexo();
        $id_direccion = $this->get_id_direccion();
        $avatar = $this->get_avatar();
        $email = $this->get_email();

        global $myPDO;
        $sentencia = $myPDO->prepare("CALL ins_apoderado(?,?,?,?,?,?,?,?,?,?)");
        $sentencia->bindParam(1, $run_apoderado, \PDO::PARAM_STR, 9);
        $sentencia->bindParam(2, $nombre1, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(3, $nombre2, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(4, $apellido1, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(5, $apellido2, \PDO::PARAM_STR, 45);
        $sentencia->bindParam(6, $sexo, \PDO::PARAM_STR, 1);
        $sentencia->bindParam(7, $id_direccion, \PDO::PARAM_INT);
        $sentencia->bindParam(8, $this->telefono_fijo, \PDO::PARAM_INT);
        $sentencia->bindParam(9, $this->telefono_celular, \PDO::PARAM_INT);
        $sentencia->bindParam(10, $email, \PDO::PARAM_STR, 100);
        $result = $sentencia->execute();

        return $result;
    }

    public function db_upd_apoderado_avatar_by_run(){
        $run_apoderado = $this->get_run();
        $avatar = $this->get_avatar();
        global $myPDO;
        $sentencia = $myPDO->prepare("CALL upd_apoderado_avatar_by_run(?,?)");
        $sentencia->bindParam(1, $run_apoderado, \PDO::PARAM_STR, 9);
        $sentencia->bindParam(2, $avatar, \PDO::PARAM_STR, 100);
        $result = $sentencia->execute();

        return $result;
    }


}
?> 